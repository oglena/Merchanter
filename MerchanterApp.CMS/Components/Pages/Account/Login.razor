@page "/Account/Login"
@layout LoginLayout

@using System.Text.Json.Serialization
@using Newtonsoft.Json
@inject IHttpClientFactory ClientFactory

@inject NavigationManager navigationManager
@inject IHttpContextAccessor HttpContextAccessor
@inject IConfiguration configuration
@inject IPostHelper PostHelper

<PageTitle>Admin Login | Merchanter</PageTitle>

@if (admin.admin != null)
{
    <div class="container text-center mt-5">
        <div class="row">
            <div class="col-1 col-sm-2 col-md-4"></div>
            <div class="col-10 col-sm-8 col-md-4">
                <EditForm method="post" FormName="LoginForm" Model="admin.admin" OnValidSubmit="LoginSubmit">
                    <img class="mb-4" src="https://www.ceresyazilim.com/wp-content/uploads/2024/01/ceres_logo_transparent_base.png" alt="" width="200">
                    <h4 class="fw-normal">Welcome to merchanter.net!</h4>
                    <span class="text-danger">@login_message</span>
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <ValidationSummary></ValidationSummary>
                    <div class="form-floating mb-3">
                        <InputNumber @bind-Value="admin.admin.id" class="form-control" placeholder="Enter your admin identity"></InputNumber>
                        <label for="floatingInput">Admin Identity</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="admin.admin.name" class="form-control" placeholder="Enter your admin user name"></InputText>
                        <label for="floatingInput">Admin User Name</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText type="password" @bind-Value="admin.admin.password" class="form-control" placeholder="Enter your password"></InputText>
                        <label for="floatingPassword">Password</label>
                    </div>
                    <div class="checkbox mb-3">
                        <label>
                            <InputCheckbox @bind-Value="admin.remember_me"></InputCheckbox>&nbsp;Remember me
                        </label>
                    </div>
                    <button class="w-100 btn btn-lg btn-primary" type="submit">Login</button>
                    <p class="mt-2 mb-3 text-muted">© 2024 Ceres Software & Consultancy. All rights reserved.</p>
                </EditForm>
            </div>
            <div class="col-1 col-sm-2 col-md-4"></div>
        </div>
    </div>
}

@code {
    [SupplyParameterFromForm(FormName = "LoginForm")]
    private AdminLogin admin { get; set; } = new AdminLogin();

    private class AdminLogin
    {
        public Admin? admin { get; set; } = new Admin();
        public bool remember_me { get; set; }
    }

    private string login_message = string.Empty;

    private async Task LoginSubmit()
    {
        if (HttpContextAccessor != null && HttpContextAccessor.HttpContext != null)
        {
            if (admin.admin != null)
            {
                if (admin.admin.id > 0)
                {
                    using (HttpClient httpClient = new HttpClient())
                    {
                        Dictionary<string, string>? tokenDetails = null;
                        httpClient.BaseAddress = new Uri(configuration["AppSettings:MerchanterServerUrl"]);
                        using StringContent jsonContent = new(
                            System.Text.Json.JsonSerializer.Serialize(new
                            {
                                adminId = admin.admin.id,
                                name = admin.admin.name,
                                password = admin.admin.password
                            }),
                            System.Text.Encoding.UTF8,
                        "application/json");
                        using HttpResponseMessage response = await httpClient.PostAsync(
                            "api/Auth/Login", jsonContent);

                        if (response.IsSuccessStatusCode)
                        {
                            tokenDetails = JsonConvert.DeserializeObject<Dictionary<string, string>>(response.Content.ReadAsStringAsync().Result);
                            if (tokenDetails != null)
                            {
                                if (tokenDetails.TryGetValue(Variables.auth_token, out string? token) && token != null)
                                {
                                    login_message = "Authenticating";
                                    await HttpContextAccessor.HttpContext.SignInAsync(Variables.auth_cookie,
                                        new ClaimsPrincipal(
                                            new ClaimsIdentity(
                                                new List<Claim>() {
                                                new Claim(Variables.admin_id, admin.admin.id.ToString()),
                                                new Claim(ClaimTypes.Name , admin.admin.name),
                                                new Claim(ClaimTypes.Role, Variables.admin_role/* TODO: add admin role*/),
                                                new Claim("rememberMe", admin.remember_me.ToString()),
                                                new Claim(Variables.auth_token, token)
                                            },
                                            Variables.auth_cookie)), 
                                            new AuthenticationProperties {
                                                IsPersistent = admin.remember_me
                                            });
                                    navigationManager.NavigateTo("/");
                                }
                            }
                        }
                        else
                        {
                            login_message = "User Name or Password is wrong.";
                        }
                    }
                }
                else
                {
                    login_message = "Admin Identity is wrong.";
                }
            }
        }
    }
}
