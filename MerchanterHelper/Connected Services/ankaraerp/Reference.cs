//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ankaraerp
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0-preview1.24619.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientUser", Namespace="http://schemas.datacontract.org/2004/07/Degiskenler")]
    public partial class ClientUser : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string CompanyCodeField;
        
        private string MethodNameField;
        
        private string PassWordField;
        
        private string UserNameField;
        
        private string WorkYearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode
        {
            get
            {
                return this.CompanyCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true))
                {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName
        {
            get
            {
                return this.MethodNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true))
                {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord
        {
            get
            {
                return this.PassWordField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PassWordField, value) != true))
                {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkYear
        {
            get
            {
                return this.WorkYearField;
            }
            set
            {
                if ((object.ReferenceEquals(this.WorkYearField, value) != true))
                {
                    this.WorkYearField = value;
                    this.RaisePropertyChanged("WorkYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0-preview1.24619.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlobFile", Namespace="http://schemas.datacontract.org/2004/07/Degiskenler")]
    public partial class BlobFile : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private byte[] blob_dataField;
        
        private string errormessagesField;
        
        private string filenameField;
        
        private int filesizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] blob_data
        {
            get
            {
                return this.blob_dataField;
            }
            set
            {
                if ((object.ReferenceEquals(this.blob_dataField, value) != true))
                {
                    this.blob_dataField = value;
                    this.RaisePropertyChanged("blob_data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errormessages
        {
            get
            {
                return this.errormessagesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.errormessagesField, value) != true))
                {
                    this.errormessagesField = value;
                    this.RaisePropertyChanged("errormessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filename
        {
            get
            {
                return this.filenameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.filenameField, value) != true))
                {
                    this.filenameField = value;
                    this.RaisePropertyChanged("filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int filesize
        {
            get
            {
                return this.filesizeField;
            }
            set
            {
                if ((this.filesizeField.Equals(value) != true))
                {
                    this.filesizeField = value;
                    this.RaisePropertyChanged("filesize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0-preview1.24619.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessage", Namespace="http://schemas.datacontract.org/2004/07/Degiskenler")]
    public partial class ReturnMessage : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string MessageField;
        
        private int NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                if ((this.NumberField.Equals(value) != true))
                {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0-preview1.24619.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ankaraerp.IDataShare")]
    public interface IDataShare
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataShare/Invoke", ReplyAction="http://tempuri.org/IDataShare/InvokeResponse")]
        System.Threading.Tasks.Task<ankaraerp.BlobFile> InvokeAsync(ankaraerp.ClientUser cuser, string Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataShare/SendDocument", ReplyAction="http://tempuri.org/IDataShare/SendDocumentResponse")]
        System.Threading.Tasks.Task<ankaraerp.ReturnMessage> SendDocumentAsync(ankaraerp.ClientUser cuser, ankaraerp.BlobFile ReqDocument);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0-preview1.24619.5")]
    public interface IDataShareChannel : ankaraerp.IDataShare, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0-preview1.24619.5")]
    public partial class DataShareClient : System.ServiceModel.ClientBase<ankaraerp.IDataShare>, ankaraerp.IDataShare
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DataShareClient() : 
                base(DataShareClient.GetDefaultBinding(), DataShareClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IDataShare.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataShareClient(EndpointConfiguration endpointConfiguration) : 
                base(DataShareClient.GetBindingForEndpoint(endpointConfiguration), DataShareClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataShareClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataShareClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataShareClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataShareClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataShareClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ankaraerp.BlobFile> InvokeAsync(ankaraerp.ClientUser cuser, string Request)
        {
            return base.Channel.InvokeAsync(cuser, Request);
        }
        
        public System.Threading.Tasks.Task<ankaraerp.ReturnMessage> SendDocumentAsync(ankaraerp.ClientUser cuser, ankaraerp.BlobFile ReqDocument)
        {
            return base.Channel.SendDocumentAsync(cuser, ReqDocument);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDataShare))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDataShare))
            {
                return new System.ServiceModel.EndpointAddress("");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DataShareClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IDataShare);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return DataShareClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IDataShare);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IDataShare,
        }
    }
}
