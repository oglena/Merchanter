@rendermode InteractiveServer
@using System.Text.Json.Serialization
@using Newtonsoft.Json
@using System.Text
@inject IPostHelper PostHelper
@inject IHttpContextAccessor HttpContextAccessor

<FluentGridItem xs="12">
    <FluentInputFile Id="product-image-uploader"
                     DragDropZoneVisible="true"
                     Mode="InputFileMode.Stream"
                     Multiple="true"
                     MaximumFileCount="10"
                     MaximumFileSize="@(10*1024*1024)"
                     Accept="image/*"
                     @bind-ProgressPercent="@ProgressPercent"
                     OnCompleted="@OnCompletedAsync">
        <ChildContent>
            <label for="product-image-uploader">
                <FluentIcon Value="@(new @Icons.Regular.Size24.ArrowUpload())" />
            </label>

            <div>
                Dosyaları yüklemek için buraya sürükleyin,
                veya <label for="product-image-uploader">göz atın</label>
                ve seçin<span style="color: red;">*</span>.
                <br />
                <em>En fazla 10 dosya yükleyebilirsiniz.</em>
            </div>
        </ChildContent>
    </FluentInputFile>
    <FluentDivider Style="width:100%;margin-top:0 !important;" />
    @if (Files.Any()) {
        <h4>Resim(ler) yüklendi:</h4>
        <ul>
            @foreach (var file in Files) {
                <li>
                    <b>@file.Name</b> 🔹
                    @($"{Decimal.Divide(file.Size, 1024):N} KB") 🔹
                    @file.ContentType 🔹
                    @file.LocalFile?.FullName
                    @file.ErrorMessage
                </li>
            }
        </ul>
    }
</FluentGridItem>

@if (product_images.Count > 0) {
    @for (int i = 0; i < product_images.Count; i++) {
        <FluentGridItem xs="12">
            <FluentTextField Label="Ürün Resmi (nyd)" @bind-Value="@item.image_url" Required="false" Disabled="false" Style="width:100%;">
                <FluentIcon Value="@(new Icons.Regular.Size20.Edit())" Color="@Color.Neutral" Slot="start" />
            </FluentTextField>
            @item.is_default
        </FluentGridItem>
    }
}
else {
    <FluentGridItem xs="12" Style="width:100%;margin-bottom: 10px;">
        <span style="color: red;">Resim bulunamadı.</span>
    </FluentGridItem>
}

@code {
    [Parameter]
    public List<ProductImage> product_images { get; set; }

    int ProgressPercent = 0;
    FluentInputFileEventArgs[] Files = Array.Empty<FluentInputFileEventArgs>();

    private async Task OnCompletedAsync(IEnumerable<FluentInputFileEventArgs> files) {
        Files = files.ToArray();

        // For the demo, delete these files.
        foreach (var file in Files) {
            file.LocalFile?.Delete();
        }

        // Wait 3 seconds before to reset the progress bar.
        await Task.Delay(3000);
        ProgressPercent = 0;
    }
}
