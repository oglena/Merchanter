@inherits LayoutComponentBase
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager
@inject IConfiguration configuration

<FluentDesignTheme StorageName="theme" Mode="DesignThemeModes.Dark" OfficeColor="OfficeColor.Default" />
<FluentLayout>
    <FluentHeader Height="55">
        <FluentStack VerticalAlignment="VerticalAlignment.Center" HorizontalAlignment="HorizontalAlignment.SpaceBetween">
            <FluentStack HorizontalAlignment="@HorizontalAlignment.Start">
                <a href="/" style="text-decoration:none;color:black;"><span class="title" style="font-size:20pt;align-content:center;">MERCHANTER</span></a>
            </FluentStack>
            <FluentSpacer />
            @if (HttpContextAccessor.HttpContext != null && HttpContextAccessor.HttpContext?.User.Identity != null && HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated) {
                <FluentStack HorizontalAlignment="@HorizontalAlignment.End"
                             VerticalAlignment="@VerticalAlignment.Center">
                    <FluentProfileMenu Status="@PresenceStatus.Available" HeaderLabel="@HttpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(x => x.Type == Variables.company_name)?.Value"
                                       Initials="@string.Join("", HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(x => x.Type == Variables.person_name).Value.Split(" ").Select(x=>x.Substring(0,1)))"
                                       ButtonSize="45px" FullName="@(HttpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(x => x.Type == Variables.person_name)?.Value + " (" + HttpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value + ")")" EMail="@HttpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Email)?.Value"
                                       PopoverStyle="min-width: 400px;" FooterLink="Hesabım" OnFooterLinkClick="GotoAccount"
                                       HeaderButton="Çıkış Yap" OnHeaderButtonClick="Logout" />
                </FluentStack>
            }
        </FluentStack>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter Class="fixed-bottom">
        <span class="copyright">©2024-2025 CERES Yazılım & Danışmanlık, Tüm hakları saklıdır.</span><FluentSpacer />
        <a href="#" target="_blank">Merchanter Hakkında</a>
    </FluentFooter>
</FluentLayout>

<div id="blazor-error-ui" data-nosnippet>
    Bilinemeyen bir hata oluştu!
    <a href="." class="reload">Yenile</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    bool open = false;

    private void GotoAccount() {
        NavigationManager.NavigateTo("/Account/Profile");
    }

    private void Logout() {
        NavigationManager.NavigateTo("/Account/Logout", true);
    }
}